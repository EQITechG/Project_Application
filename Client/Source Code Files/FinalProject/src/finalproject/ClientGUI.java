/*
University of Greenwich
School of Computing & Mathematical Sciences
Final Year Project
Author: Chinedu Gabriel Asinugo.
Student ID: 000433816
Class of 2013
 */
package finalproject;

import com.sun.org.apache.xerces.internal.impl.io.ASCIIReader;
import javax.swing.*;
import java.awt.Color;
import javax.swing.JColorChooser;
import java.awt.Button;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.TextField;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringReader;
import java.net.SocketAddress;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.Line;
import javax.sound.sampled.SourceDataLine;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JOptionPane;

/**
 *
 * @author Chinedu Gabriel Asinugo
 */
public class ClientGUI extends javax.swing.JFrame {
    public static Client c;
    public static SocketAddress chatwith;
    public static File sf;
    public static LDServer lds;
    Color colorYour = Color.black;
    /**
     * Creates new form ClientGUI
     */
    public ClientGUI() {
        initComponents();
        lstClients.setAutoscrolls(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        IpField = new javax.swing.JTextField();
        PField = new javax.swing.JTextField();
        NField = new javax.swing.JTextField();
        CButton = new javax.swing.JButton();
        DButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SendTextArea = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiveTextArea = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstClients = new javax.swing.JList();
        ChatButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        TextColourButton = new javax.swing.JButton();
        SendButton = new javax.swing.JButton();
        BuzzButton = new javax.swing.JButton();
        SendFileButton = new javax.swing.JButton();
        jpanelchatting = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        chatWithLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        ShareScreenButton = new javax.swing.JToggleButton();
        MorseCodeButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");
        setBounds(new java.awt.Rectangle(2, 2, 2, 2));
        setPreferredSize(new java.awt.Dimension(480, 650));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection"));

        jLabel1.setText("Server IP:");

        jLabel2.setText("Port:");

        jLabel3.setText("User Name:");

        IpField.setText("127.0.0.1");
        IpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpFieldActionPerformed(evt);
            }
        });

        PField.setText("123");

        NField.setText("A");

        CButton.setText("Connect");
        CButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CButtonActionPerformed(evt);
            }
        });

        DButton.setText("Disconnect");
        DButton.setEnabled(false);
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CButton)
                        .addGap(87, 87, 87))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IpField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(PField)
                            .addComponent(NField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(DButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CButton)
                    .addComponent(DButton)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Send Message:"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        SendTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SendTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SendTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(SendTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Received Message:"));
        jPanel3.setPreferredSize(new java.awt.Dimension(198, 103));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        ReceiveTextArea.setEditable(false);
        jScrollPane2.setViewportView(ReceiveTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Available Clients:"));

        lstClients.setEnabled(false);
        jScrollPane3.setViewportView(lstClients);

        ChatButton.setText("Select & Start Chat");
        ChatButton.setEnabled(false);
        ChatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChatButton))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ChatButton)
                .addGap(21, 21, 21))
        );

        jPanel6.setPreferredSize(new java.awt.Dimension(95, 195));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );

        TextColourButton.setText("Text Colour");
        TextColourButton.setEnabled(false);
        TextColourButton.setPreferredSize(new java.awt.Dimension(90, 60));
        TextColourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextColourButtonActionPerformed(evt);
            }
        });

        SendButton.setText("Send");
        SendButton.setEnabled(false);
        SendButton.setPreferredSize(new java.awt.Dimension(90, 60));
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        BuzzButton.setText("Buzz");
        BuzzButton.setEnabled(false);
        BuzzButton.setPreferredSize(new java.awt.Dimension(90, 60));
        BuzzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuzzButtonActionPerformed(evt);
            }
        });

        SendFileButton.setText("Send File");
        SendFileButton.setEnabled(false);
        SendFileButton.setPreferredSize(new java.awt.Dimension(90, 60));
        SendFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendFileButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Chatting With :");

        chatWithLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jpanelchattingLayout = new javax.swing.GroupLayout(jpanelchatting);
        jpanelchatting.setLayout(jpanelchattingLayout);
        jpanelchattingLayout.setHorizontalGroup(
            jpanelchattingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelchattingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatWithLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpanelchattingLayout.setVerticalGroup(
            jpanelchattingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4)
            .addComponent(chatWithLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setPreferredSize(new java.awt.Dimension(800, 30));

        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setText("Ready to connect");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 457, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(statusLabel)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        ShareScreenButton.setText("Share Screen");
        ShareScreenButton.setEnabled(false);
        ShareScreenButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ShareScreenButtonStateChanged(evt);
            }
        });
        ShareScreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShareScreenButtonActionPerformed(evt);
            }
        });

        MorseCodeButton.setText(" Morse Code");
        MorseCodeButton.setEnabled(false);
        MorseCodeButton.setPreferredSize(new java.awt.Dimension(90, 60));
        MorseCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MorseCodeButtonActionPerformed(evt);
            }
        });

        jMenu1.setForeground(new java.awt.Color(0, 0, 204));
        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setForeground(new java.awt.Color(0, 0, 204));
        jMenuItem1.setText("Save Chat");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setForeground(new java.awt.Color(0, 0, 204));
        jMenuItem2.setText("Close");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(0, 0, 204));
        jMenu2.setText("Help");

        jMenuItem3.setForeground(new java.awt.Color(0, 0, 204));
        jMenuItem3.setText("Read Me");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);
        jMenu2.add(jSeparator2);

        jMenuItem5.setForeground(new java.awt.Color(0, 0, 204));
        jMenuItem5.setText("About");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanelchatting, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(MorseCodeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(BuzzButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShareScreenButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SendFileButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextColourButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1078, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ShareScreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(SendFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addComponent(TextColourButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BuzzButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MorseCodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanelchatting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    /*
     * similar code as in client to save server log
     * this saves the chat
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser jfc=new JFileChooser();
        FileFilter ff=new FileNameExtensionFilter("Text File", "txt");
        jfc.setFileFilter(ff);
        if(jfc.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f=jfc.getSelectedFile();
            if(!f.canWrite() && f.isDirectory())
            {
                JOptionPane.showMessageDialog(this, "Unable to write to file");
            }
            else
            {
                String str=ReceiveTextArea.getText();
                PrintWriter pw;
                try {
                    pw = new PrintWriter(f);
                    pw.write(str);
                    pw.flush();
                    pw.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    /*
     * this is quit
     * No need to do anything  here as the user quiting will cause the socket
     * to fail and the server will notice automatically and tell other users
     * automatically
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
     int reply = JOptionPane.showConfirmDialog(null, "Do you wish to save your chat log?", "Close Option",   
               JOptionPane.YES_NO_OPTION);  
     if(reply==JOptionPane.YES_OPTION){
         
           JFileChooser jfc=new JFileChooser();
        FileFilter ff=new FileNameExtensionFilter("Text File", "txt");
        jfc.setFileFilter(ff);
        if(jfc.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f=jfc.getSelectedFile();
            if(!f.canWrite() && f.isDirectory())
            {
                JOptionPane.showMessageDialog(this, "Unable to write to file");
            }
            else
            {
                String str=ReceiveTextArea.getText();
                PrintWriter pw;
                try {
                    pw = new PrintWriter(f);
                    pw.write(str);
                    pw.flush();
                    pw.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            System.exit(0);
        }    
        
     }else{
        System.exit(0);
     }
     
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void IpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpFieldActionPerformed
       
    }//GEN-LAST:event_IpFieldActionPerformed

    private void CButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CButtonActionPerformed
        // sanity checks on connection input details
        IpField.setText(IpField.getText().trim());
        if(IpField.getText().length()==0) {
            JOptionPane.showMessageDialog(this, "Server Ip field Cannot be empty");
        }
        else if(PField.getText().length()==0) {
            JOptionPane.showMessageDialog(this, "Port field Cannot be empty");
        }
        else if(NField.getText().length()==0) {
            JOptionPane.showMessageDialog(this, "Name field Cannot be empty");
        }
        else
        {
            try
            {
                int port=Integer.parseInt(PField.getText());
                c=new Client();
                c.jf=this;
                c.start(IpField.getText(), Integer.parseInt(PField.getText()), NField.getText());
                statusLabel.setText("Connected");
                //Manage UI according to connected status
                CButton.setEnabled(false);
                DButton.setEnabled(true);
                SendTextArea.setEnabled(true);
                ChatButton.setEnabled(true);
                IpField.setEnabled(false);
                NField.setEnabled(false);
                PField.setEnabled(false);
                lstClients.setEnabled(true);
                SendButton.setEnabled(false);
                BuzzButton.setEnabled(false);
                ShareScreenButton.setEnabled(false);
                TextColourButton.setEnabled(false);
                MorseCodeButton.setEnabled(false);
                this.setTitle(NField.getText() + " chat");
            } catch (IOException ex) {
                Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                statusLabel.setText("Unable to connect to server");
                JOptionPane.showMessageDialog(this, "Unable to connect to server");
            }
            catch(NumberFormatException ex)
            {
                JOptionPane.showMessageDialog(this, "Port field can only be a number");
            }
        }
    }//GEN-LAST:event_CButtonActionPerformed
    /*
     * plays the buzz sound
     * and displays the text who buzzed you
     * in the received text area
     */
    public static void buzz(String from)
    {
        playSound("buzz.wav");
        Message m=new Message();
        m.sender=from;
        m.msg="Buzzed You!!";
        msgRecieved(m);
    }
    /*
     * Simply plays a given wav file when there is a buzz message
     */
    public static void playSound(String filename){
       

        try {
            File soundFile=new File(filename);
            Clip clip;
            
            System.out.println("Playing " + soundFile.getName());

            Line.Info linfo = new Line.Info(Clip.class);
            Line line = AudioSystem.getLine(linfo);
            clip = (Clip) line;
            AudioInputStream ais = AudioSystem.getAudioInputStream( soundFile );
            clip.open(ais);
            clip.start();
        } catch (Exception e){
            e.printStackTrace();
           //System.exit(1);
        }
        
    }
    
    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        Message m=new Message();
       
        m.sender=c.uname;
        //if(lstClients.getSelectedIndex()==-1)
        //{
        //    JOptionPane.showMessageDialog(this, "Please select a user to send message to");
        //    return ;
        //}
        m.from=c.s.getLocalSocketAddress();
        m.to=chatwith;
        if(chatwith==null)
        {
                JOptionPane.showMessageDialog(this, "Please select a different user to send message to");
                return ;
        }
        
        m.msg=SendTextArea.getText();
        SendTextArea.setText(""); //clear the send text area
        if(m.msg.length()>0) //sanity check
        {
            msgSend(m);
            SimpleDateFormat sdf = new SimpleDateFormat("hh:mm aa");
                        Date d=new Date();
            statusLabel.setText("Message Sent to " + ClientGUI.chatWithLabel.getText() 
                    + " at " + sdf.format(d));
        }
        
    }//GEN-LAST:event_SendButtonActionPerformed

    
    /*
     * disconnect button triggers this
     */
    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
                if(lds!=null && lds.isRunning()) //stop the desktop sharing server if running
                    lds.stop();
                if(c==null)
                       return;
                c.stop();   //stop the client if connected
                c.run=false;
                
                //manage UI to reflect that we have disconnected
                CButton.setEnabled(true);
                DButton.setEnabled(false);
                SendButton.setEnabled(false);
                BuzzButton.setEnabled(false);
                SendTextArea.setEnabled(false);
                ChatButton.setEnabled(false);
                ShareScreenButton.setEnabled(false);
                TextColourButton.setEnabled(false);
                MorseCodeButton.setEnabled(false);
                IpField.setEnabled(true);
                NField.setEnabled(true);
                PField.setEnabled(true);
                lstClients.setEnabled(false);
                statusLabel.setText("Disconnected");
    }//GEN-LAST:event_DButtonActionPerformed

    private void ChatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChatButtonActionPerformed
        try
        {
            if(lstClients.getSelectedIndex() ==-1)
            {
                JOptionPane.showMessageDialog(rootPane, "unable to reach " + chatWithLabel.getText());
            }
            else
            {
                c.askToChat(c.vsa.get(lstClients.getSelectedIndex()));
                //chatWithLabel.setText();
                //chatwith=c.vsa.get(lstClients.getSelectedIndex());
            }
        }catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_ChatButtonActionPerformed

    
    
    private void BuzzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuzzButtonActionPerformed
        Command t=new Command();
        t.cmd="BUZZ";   //send the buzz command
        t.sa=chatwith;
        c.send(t);
        //update text area to show you buzzed someone successfully
        Message m=new Message();
        m.sender="";
        m.msg="You buzzed " + chatWithLabel.getText();
        msgRecieved(m);
        statusmsgRecieved(m);
    }//GEN-LAST:event_BuzzButtonActionPerformed

    
    /*
     * Send a file to user you are chatting with
     */
    private void SendFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendFileButtonActionPerformed
        JFileChooser jfc=new JFileChooser();
        if(jfc.showDialog(this, "Send")==JFileChooser.APPROVE_OPTION)
        {
            sf=jfc.getSelectedFile();
            if(sf.exists() && sf.canRead())
            {
                Command t=new Command();
                t.cmd="SENDFILE";   //ask the server to ask the other client if he wants to receive
                t.data=sf.getName();
                t.sa=chatwith;
                c.send(t);
            
                Message m=new Message();
                m.sender="";
                m.msg="asking permission from " + chatWithLabel.getText();
                statusmsgRecieved(m);
            }
        }        
    }//GEN-LAST:event_SendFileButtonActionPerformed

    private void SendTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SendTextAreaKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER)  //enter key is pressed?
        {
            if( SendTextArea.getText().length()> 0 )    //sanity check
            {
                //SendTextArea.setText(SendTextArea.getText().substring(0,SendTextArea.getText().length()-1));
                SendButtonActionPerformed(null);
            }
        }
        
    }//GEN-LAST:event_SendTextAreaKeyPressed

    private void SendTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SendTextAreaKeyReleased
        if(evt.getKeyCode()==evt.VK_ENTER)  //enter key is pressed?
        {
            SendTextArea.setText(""); //clear the text area
        }
    }//GEN-LAST:event_SendTextAreaKeyReleased

    private void ShareScreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShareScreenButtonActionPerformed
        if(ShareScreenButton.isSelected())
        {
            if(lds!=null && lds.isRunning())
            lds.stop();
        
            boolean valid=false;
            int port=8005;// Hard coded for transperency sake, 
                          //port 8005 was used because of Univeristy of Greenwich 
                           //CMS Lab Open Ports range for testing
//            while(!valid)
//            {
//                String s;
//                s=JOptionPane.showInputDialog(this, "Enter port for screen broadcasting server:");
//                try
//                {
//                    port=Integer.parseInt(s);
//                    valid=true;
//
//                }catch(Exception e)
//                {
//                }
//            }
            lds=new LDServer(port);
            lds.xstart();
            //inform the server we have the screen share server running
            Command t=new Command();
            t.cmd="BSERVER";
            t.sa=lds.s.getLocalSocketAddress();
            c.send(t);
            //invite the other person to view your screen
            t=new Command();
            t.cmd="INVITESCREEN";
            t.sa=ClientGUI.chatwith;
            c.send(t);
            
            Message m=new Message();
            m.sender="";
            m.msg="Broadcast server started";
            statusmsgRecieved(m);
        }
        else    //we need to stop the screen share server
        {
            Message m=new Message();
            m.sender="";
            m.msg=" Screen share ended";
            statusmsgRecieved(m);
            lds.stop();
            Command t=new Command();
            t.cmd="CLOSESCREEN";    //inform the server of the screen share server shutting down
            t.sa=chatwith;
            c.send(t);
        }
    }//GEN-LAST:event_ShareScreenButtonActionPerformed

    private void ShareScreenButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ShareScreenButtonStateChanged
        
    }//GEN-LAST:event_ShareScreenButtonStateChanged
    
    /*
     * extract the resource readme.txt from the jar file
     * and open it with default text viewer
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try{
           File f=File.createTempFile("CLIENT", ".txt");
           PrintWriter fos=new PrintWriter(f);
           BufferedReader br;
           br =new BufferedReader(new InputStreamReader(this.getClass().getResourceAsStream("/finalproject/readme.txt")));
           String s;
           s=br.readLine();
           while(s!=null)
           {
               s+="\r\n";   //take extra care of the new line characters
               fos.write(s);
               fos.flush();
               s=br.readLine();
           }
           fos.flush();
           fos.close();
           Desktop.getDesktop().open(f);
        }catch(IOException ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /*
     * create and show a new about dialog box
     */
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        AboutBox ab=new AboutBox(this, true);
        ab.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    
    
    /*
     * trigerred when you close the client
     * same as hitting disconnect
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void TextColourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextColourButtonActionPerformed
    
        Color colorChoose = JColorChooser.showDialog(ClientGUI.this, "Choose a colour for your TEXT", Color.black);
        if(TextColourButton.isSelected()) {
            new MorseCodeGUI();
          ClientGUI.this.colorYour = colorChoose;
        }      //ClientGUI.this.sendColor();        // TODO add your handling code here:
    }//GEN-LAST:event_TextColourButtonActionPerformed

    private void MorseCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MorseCodeButtonActionPerformed
    new MorseCodeGUI(); //Opens Morse Code Class
    }//GEN-LAST:event_MorseCodeButtonActionPerformed

    /*
     * show a message recieved on the received text box
     */
    public static void msgRecieved(Message m)
    {
        ReceiveTextArea.setText(ReceiveTextArea.getText() + "\n" + m.sender +
                " : " + m.msg);
        //ReceiveTextArea.setAutoscrolls(true);
        ReceiveTextArea.setCaretPosition(ReceiveTextArea.getStyledDocument().getLength());
    }
    
    /*
     * update the status message to reflect recieved message
     */
    public static void statusmsgRecieved(Message m)
    {
        statusLabel.setText(m.sender + " " + m.msg);
    }
    
    /*
     * send the message m to the one you are 
     * chatting with 
     */
    public void msgSend(Message m)
    {
        c.send(m);
        msgRecieved(m);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton BuzzButton;
    public static javax.swing.JButton CButton;
    public static javax.swing.JButton ChatButton;
    public static javax.swing.JButton DButton;
    public static javax.swing.JTextField IpField;
    public static javax.swing.JButton MorseCodeButton;
    public static javax.swing.JTextField NField;
    public static javax.swing.JTextField PField;
    public static javax.swing.JTextPane ReceiveTextArea;
    public static javax.swing.JButton SendButton;
    public static javax.swing.JButton SendFileButton;
    public static javax.swing.JTextPane SendTextArea;
    public static javax.swing.JToggleButton ShareScreenButton;
    public static javax.swing.JButton TextColourButton;
    public static javax.swing.JLabel chatWithLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    public static javax.swing.JPanel jpanelchatting;
    public static javax.swing.JList lstClients;
    public static javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}